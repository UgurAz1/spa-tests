name: Playwright Tests
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install dependencies
        run: npm ci --force
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps --force
      - name: Create .env file from GitHub secrets
        run: |
          echo "BASE_URL=${{ secrets.BASE_URL }}" >> .env
          echo "BASE_URL_BACKEND=${{ secrets.BASE_URL_BACKEND }}" >> .env
          echo "ACCESS_TOKEN=${{ secrets.ACCESS_TOKEN }}" >> .env
          echo "PAYPAL_CLIENT_ID=${{ secrets.PAYPAL_CLIENT_ID }}" >> .env
          echo "PAYPAL_SECRET=${{ secrets.PAYPAL_SECRET }}" >> .env
          echo "PAYPAL_BUYER_EMAIL=${{ secrets.PAYPAL_BUYER_EMAIL }}" >> .env
          echo "PAYPAL_BUYER_PASSWORD=${{ secrets.PAYPAL_BUYER_PASSWORD }}" >> .env
          echo "MAILBOX_ORG_EMAIL=${{ secrets.MAILBOX_ORG_EMAIL }}" >> .env
          echo "MAILBOX_ORG_PASSWORD=${{ secrets.MAILBOX_ORG_PASSWORD }}" >> .env
          echo "MAILBOX_INBOX=${{ secrets.MAILBOX_INBOX }}" >> .env
      - name: Create test-data/user.json from GitHub secrets
        run: |
          mkdir -p test-data
          echo '{ "email": "${{ secrets.TEST_EMAIL }}", "password": "${{ secrets.TEST_PASSWORD }}" }' > test-data/user.json
      - name: ðŸ§ª Run auth.setup.ts
        run: npx playwright test tests/setup/auth.setup.ts
      - name: Run Playwright tests
        run: "npx playwright test -g 'TC-R01: Registration and confirmation' --project=no-auth-chrome"
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
